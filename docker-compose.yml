version: "3.8"
services:

  keycloak-db-postgres:
    image: postgres
    container_name: keycloak-db-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - $PWD/volumes/keycloak_db_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openmed-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - 8443:8443
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/config/openmed.json
      KEYCLOAK_WELCOME_THEME: openmed
      KEYCLOAK_DEFAULT_THEME: openmed
      # KEYCLOAK_FRONTEND_URL: https://localhost:8080/keycloak/auth
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-db-postgres
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      DB_DATABASE: keycloak
      DB_SCHEMA: public
    volumes:
      - "$PWD/keycloak/config:/tmp/config"
      - "$PWD/keycloak/themes/openmed:/opt/jboss/keycloak/themes/openmed"
      - "$PWD/keycloak/config/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml"
    depends_on: 
      keycloak-db-postgres:
        condition: service_healthy
    networks:
      openmed-net:
          ipv4_address: 172.33.0.100

  kong-db-postgres:
    image: postgres
    container_name: kong-db-postgres
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - $PWD/volumes/kong_db_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openmed-net

  kong-migration:
    image: kong:latest
    container_name: kong-migration
    depends_on:
      kong-db-postgres:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db-postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    command: kong migrations bootstrap
    networks:
      - openmed-net

  kong:
    build: kong/build
    container_name: kong
    ports:
      - 8000:8000
      - 8445:8443
      - 8001:8001
      - 8444:8444
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db-postgres
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stdout
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      # KONG_SSL_CERT: /app/ssl/config/keys/letsencrypt/fullchain.pem
      # KONG_SSL_CERT_KEY: /app/ssl/config/keys/letsencrypt/privkey.pem
      KONG_PLUGINS: "bundled,jwt-keycloak,cors"
    volumes:
      - "$PWD/kong/ssl:/app/ssl/config"
    depends_on: 
      kong-db-postgres:
        condition: service_healthy
      kong-migration:
        condition: service_started
    networks:
      - openmed-net
  
  konga-db-postgres:
    image: postgres:11 #postgres 12+ not supported by konga
    container_name: konga-db-postgres
    ports:
      - 5434:5432
    environment:
      POSTGRES_DB: konga
      POSTGRES_USER: konga
      POSTGRES_PASSWORD: konga
    volumes:
      - $PWD/volumes/konga_db_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U konga"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - openmed-net

  konga-migration:
    image: pantsel/konga
    container_name: konga-migration
    command: -c prepare -a "postgres" -u "postgresql://konga:konga@konga-db-postgres:5432/konga"
    depends_on:
      konga-db-postgres:
        condition: service_healthy
    networks:
      - openmed-net

  konga:
    image: pantsel/konga
    container_name: konga
    ports:
      - 1337:1337
    environment:
      NODE_ENV: production
      TOKEN_SECRET: kongasecret
      DB_ADAPTER: postgres
      DB_HOST: konga-db-postgres
      DB_USER: konga
      DB_PASSWORD: konga
      DB_DATABASE: konga
      DB_PG_SCHEMA: public
      KONGA_SEED_USER_DATA_SOURCE_FILE: /app/user_seed.js
    volumes:
      - "$PWD/konga/user_seed.js:/app/user_seed.js"
    depends_on: 
      konga-db-postgres:
        condition: service_healthy
      konga-migration:
        condition: service_started
    networks:
      - openmed-net

networks:
  openmed-net:
    ipam:
      config:
        - subnet: "172.33.0.0/16"
          gateway: "172.33.0.1"